/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.87
 * Generated at: 2024-04-19 02:45:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.layout;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import shop.dto.Product;
import java.util.List;

public final class header_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("shop.dto.Product");
    _jspx_imports_classes.add("java.util.List");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");

	List<Product> cartList = (List<Product>) session.getAttribute("cartList");
	int cartCount = cartList == null ? 0 : cartList.size();
	
	String root = request.getContextPath();
	
	String loginId = (String) session.getAttribute("loginId");
	String keyword = request.getParameter("keyword");
	keyword = keyword == null ? "" : keyword;
	

      out.write("\r\n");
      out.write("<nav class=\"navbar bg-dark navbar-expand-lg bg-body-tertiary\" data-bs-theme=\"dark\">\r\n");
      out.write("  <div class=\"container-fluid\">\r\n");
      out.write("    <a class=\"navbar-brand\" href=\"");
      out.print( root );
      out.write("\">Home</a>\r\n");
      out.write("    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n");
      out.write("      <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("    </button>\r\n");
      out.write("    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n");
      out.write("      <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link active\" aria-current=\"page\" href=\"");
      out.print( root );
      out.write("/shop/products.jsp\">Product</a>\r\n");
      out.write("        </li>\r\n");
      out.write("      </ul>\r\n");
      out.write("       <ul class=\"navbar-nav d-flex align-items-center px-3\">\r\n");
      out.write("       	");

       		if( loginId == null || loginId.equals("") ) {
       	
      out.write("\r\n");
      out.write("       	<!-- 비로그인 시 -->\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" aria-current=\"page\" href=\"");
      out.print( root );
      out.write("/user/login.jsp\">로그인</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" aria-current=\"page\" href=\"");
      out.print( root );
      out.write("/user/join.jsp\">회원가입</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" aria-current=\"page\" href=\"");
      out.print( root );
      out.write("/user/order.jsp\">주문내역</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        ");

       		} else {
        
      out.write("\r\n");
      out.write("        <!-- 로그인 시 -->\r\n");
      out.write("<!--         <li class=\"nav-item\"> -->\r\n");
      out.write("\r\n");
      out.write("<!--         </li> -->\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("        <div class=\"dropdown\">\r\n");
      out.write("	      <a href=\"#\" class=\"d-flex align-items-center link-body-emphasis text-decoration-none dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n");
      out.write("	        <img src=\"https://github.com/mdo.png\" alt=\"\" width=\"32\" height=\"32\" class=\"rounded-circle me-2\">\r\n");
      out.write("	        <strong>");
      out.print( loginId );
      out.write("</strong>\r\n");
      out.write("	      </a>\r\n");
      out.write("	      <ul class=\"dropdown-menu text-small shadow\">\r\n");
      out.write("	        <li><a class=\"dropdown-item\" href=\"");
      out.print( root );
      out.write("/user/index.jsp\">마이 페이지</a></li>\r\n");
      out.write("	        <li><a class=\"dropdown-item\" href=\"");
      out.print( root );
      out.write("/user/update.jsp\">회원정보 수정</a></li>\r\n");
      out.write("	        <li><a class=\"dropdown-item\" href=\"");
      out.print( root );
      out.write("/user/order.jsp\">주문내역</a></li>\r\n");
      out.write("	        <li><hr class=\"dropdown-divider\"></li>\r\n");
      out.write("	        <li><a class=\"dropdown-item\" href=\"");
      out.print( root );
      out.write("/user/logout.jsp\">로그아웃</a></li>\r\n");
      out.write("	      </ul>\r\n");
      out.write("	    </div>\r\n");
      out.write("        </li>\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("<!--         <li class=\"nav-item\"> -->\r\n");
      out.write("\r\n");
      out.write("<!--         </li> -->\r\n");
      out.write("        ");

        	}
        
      out.write("\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("	        <a class=\"nav-link position-relative\" aria-current=\"page\" href=\"");
      out.print( root );
      out.write("/shop/cart.jsp\">\r\n");
      out.write("	        	<i class=\"material-symbols-outlined\">shopping_bag</i>\r\n");
      out.write("	        	<span class=\"cart-count\">");
      out.print( cartCount );
      out.write("</span>\r\n");
      out.write("	        </a>\r\n");
      out.write("        </li>\r\n");
      out.write("      </ul>\r\n");
      out.write("      <form class=\"d-flex\" role=\"search\" action=\"");
      out.print( root );
      out.write("/shop/products.jsp\" method=\"get\">\r\n");
      out.write("        <input class=\"form-control me-2\" type=\"search\" name=\"keyword\" placeholder=\"Search\" aria-label=\"Search\"\r\n");
      out.write("        		value=\"");
      out.print( keyword );
      out.write("\">\r\n");
      out.write("        <button class=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n");
      out.write("      </form>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</nav>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
